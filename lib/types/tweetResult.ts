// Autogenerated types using https://github.com/shakyShane/json-ts
export interface TweetResult {
    data: IData;
}

export interface IData {
    tweetResult: ITweetResult;
}

export interface ITweetResult {
    result?: IResult;
}

export interface IResult {
    __typename: string;
    rest_id?: string;
    has_birdwatch_notes?: boolean;
    core?: ICore;
    unmention_info?: IUnmention_info;
    views?: IViews;
    source?: string;
    legacy?: ILegacy;
    id?: string;
    affiliates_highlighted_label?: IAffiliates_highlighted_label;
    has_nft_avatar?: boolean;
    super_follow_eligible?: boolean;
    super_followed_by?: boolean;
    super_following?: boolean;
    business_account?: IBusiness_account;
    quoted_status_result?: IQuoted_status_result;
    professional?: IProfessional;
    reason?: string;
    card?: ICard;
    unified_card?: IUnified_card;
    quotedRefResult?: IQuotedRefResult;
}

export interface ICore {
    user_results: IUser_results;
}

export interface IUser_results {
    result: IResult;
}

export interface IAffiliates_highlighted_label {
    label?: ILabel;
}

export interface ILegacy {
    'protected'?: boolean;
    created_at?: string;
    default_profile?: boolean;
    default_profile_image?: boolean;
    description?: string;
    entities?: IEntities;
    fast_followers_count?: number;
    favourites_count?: number;
    followers_count?: number;
    friends_count?: number;
    has_custom_timelines?: boolean;
    is_translator?: boolean;
    listed_count?: number;
    location?: string;
    media_count?: number;
    name?: string;
    normal_followers_count?: number;
    pinned_tweet_ids_str?: string[];
    possibly_sensitive?: boolean;
    profile_banner_url?: string;
    profile_image_url_https?: string;
    profile_interstitial_type?: string;
    screen_name?: string;
    statuses_count?: number;
    translator_type?: string;
    url?: string;
    verified?: boolean;
    withheld_in_countries?: any[];
    bookmark_count?: number;
    bookmarked?: boolean;
    conversation_id_str?: string;
    display_text_range?: number[];
    extended_entities?: IExtended_entities;
    favorite_count?: number;
    favorited?: boolean;
    full_text?: string;
    is_quote_status?: boolean;
    lang?: string;
    possibly_sensitive_editable?: boolean;
    quote_count?: number;
    reply_count?: number;
    retweet_count?: number;
    retweeted?: boolean;
    user_id_str?: string;
    id_str?: string;
    self_thread?: ISelf_thread;
    quoted_status_id_str?: string;
    quoted_status_permalink?: IQuoted_status_permalink;
    verified_type?: string;
    in_reply_to_screen_name?: string;
    in_reply_to_status_id_str?: string;
    in_reply_to_user_id_str?: string;
    place?: IPlace;
    binding_values?: IBindingValuesItem[];
    card_platform?: ICard_platform;
    user_refs_results?: IUserRefsResultsItem[];
    supplemental_language?: string;
    conversation_control?: IConversation_control;
    scopes?: IScopes;
}

export interface IEntities {
    description?: IDescription;
    url?: IUrl;
    media?: IMediaItem[];
    user_mentions?: IUserMentionsItem[];
    urls?: IUrlsItem[];
    hashtags?: IHashtagsItem[];
    symbols?: any[];
}

export interface IDescription {
    urls: IUrlsItem[];
}

export interface IUrl {
    urls?: IUrlsItem[];
    url?: string;
    urlType?: string;
}

export interface IUrlsItem {
    display_url: string;
    expanded_url: string;
    url: string;
    indices: number[];
}

export interface IBusiness_account {
    affiliates_count?: number;
}

export interface IUnmention_info {
}

export interface IViews {
    state: string;
}

export interface IMediaItem {
    display_url: string;
    expanded_url: string;
    id_str: string;
    indices: number[];
    media_url_https: string;
    type: string;
    url: string;
    sizes: ISizes;
    original_info: IOriginal_info;
    media_key?: string;
    additional_media_info?: IAdditional_media_info;
    mediaStats?: IMediaStats;
    ext_media_availability?: IExt_media_availability;
    video_info?: IVideo_info;
    ext_alt_text?: string;
    source_status_id_str?: string;
    source_user_id_str?: string;
}

export interface ISizes {
    large: ILarge;
    medium: IMedium;
    small: ISmall;
    thumb: IThumb;
}

export interface ILarge {
    h: number;
    w: number;
    resize: string;
}

export interface IMedium {
    h: number;
    w: number;
    resize: string;
}

export interface ISmall {
    h: number;
    w: number;
    resize: string;
}

export interface IThumb {
    h: number;
    w: number;
    resize: string;
}

export interface IOriginal_info {
    height: number;
    width: number;
    focus_rects?: IFocusRectsItem[];
}

export interface IExtended_entities {
    media: IMediaItem[];
}

export interface IAdditional_media_info {
    monetizable: boolean;
    source_user?: ISource_user;
    title?: string;
    description?: string;
    embeddable?: boolean;
    call_to_actions?: ICall_to_actions;
}

export interface IMediaStats {
    viewCount: number;
}

export interface IExt_media_availability {
    status: string;
}

export interface IVideo_info {
    aspect_ratio: number[];
    duration_millis?: number;
    variants: IVariantsItem[];
}

export interface IVariantsItem {
    bitrate?: number;
    content_type: string;
    url: string;
}

export interface ISelf_thread {
    id_str: string;
}

export interface IQuoted_status_result {
    result: IResult;
}

export interface IFocusRectsItem {
    x: number;
    y: number;
    w: number;
    h: number;
}

export interface IQuoted_status_permalink {
    url: string;
    expanded: string;
    display: string;
}

export interface IUserMentionsItem {
    id_str: string;
    name: string;
    screen_name: string;
    indices: number[];
}

export interface IHashtagsItem {
    indices: number[];
    text: string;
}

export interface IProfessional {
    rest_id: string;
    professional_type: string;
    category: ICategoryItem[];
}

export interface ICategoryItem {
    id: number;
    name: string;
    icon_name: string;
}

export interface IPlace {
    attributes: IAttributes;
    bounding_box: IBounding_box;
    contained_within: any[];
    country: string;
    country_code: string;
    full_name: string;
    name: string;
    id: string;
    place_type: string;
    url: string;
}

export interface IAttributes {
}

export interface IBounding_box {
    coordinates: any[];
    type: string;
}

export interface ICard {
    rest_id: string;
    legacy: ILegacy;
}

export interface IBindingValuesItem {
    key: string;
    value: IValue;
}

export interface IValue {
    image_value?: IImage_value;
    type: string;
    string_value?: string;
    scribe_key?: string;
    user_value?: IUser_value;
    image_color_value?: IImage_color_value;
    boolean_value?: boolean;
}

export interface IImage_value {
    height: number;
    width: number;
    url: string;
    alt?: string;
}

export interface IUser_value {
    id_str: string;
    path: any[];
}

export interface IImage_color_value {
    palette: IPaletteItem[];
}

export interface IPaletteItem {
    rgb: IRgb;
    percentage: number;
}

export interface IRgb {
    blue: number;
    green: number;
    red: number;
}

export interface ICard_platform {
    platform: IPlatform;
}

export interface IPlatform {
    audience: IAudience;
    device: IDevice;
}

export interface IAudience {
    name: string;
}

export interface IDevice {
    name: string;
    version: string;
}

export interface IUserRefsResultsItem {
    result: IResult;
}

export interface IUnified_card {
    card_fetch_state: string;
}

export interface ILabel {
    url: IUrl;
    badge: IBadge;
    description: string;
    userLabelType?: string;
    userLabelDisplayType?: string;
}

export interface IBadge {
    url: string;
}

export interface ISource_user {
    user_results: IUser_results;
}

export interface IConversation_control {
    policy: string;
    conversation_owner_results: IConversation_owner_results;
}

export interface IConversation_owner_results {
    result: IResult;
}

export interface IQuotedRefResult {
    result?: IResult;
}

export interface IScopes {
    followers: boolean;
}

export interface ICall_to_actions {
    visit_site: IVisit_site;
}

export interface IVisit_site {
    url: string;
}

